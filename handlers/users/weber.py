from aiogram import types
from keyboards.inline.weber_inline import tasks, tasks_sen
from loader import dp, bot
from states.state import StateBot
from aiogram.dispatcher import FSMContext
from keyboards.inline.get_mail import get_mail
from handlers.users.quiz import cur, con
from mail.googlemail import mail

web_count = 0

@dp.message_handler(text='üö™–ù–∞—á–∞—Ç—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—Éüö™',state=StateBot.In_choice_web)
async def bot_web(message: types.Message, state: FSMContext):
    await StateBot.In_task.set()
    await message.answer('–ù–∞—Å—Ç–∞–ª –≤–∞—à –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –≤ –Ω–æ–≤–æ–π –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏. \n\n–ü–µ—Ä–≤–æ–π –≤–∞—à–µ–π –∑–∞–¥–∞—á–µ–π —Å—Ç–∞–ª–∞ —Ü–µ–Ω—Ç—Ä–æ–≤–∫–∞ html-–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤. \n\n–ö–∞–∫ –≤—ã —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç–µ?', reply_markup=tasks)

@dp.callback_query_handler(text = ["true", "false"], state=StateBot.In_task)
async def bot_g(call: types.CallbackQuery, state: FSMContext):
    global web_count
    if call.data == "true":
        await call.message.answer("–í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. \n\n–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å SQL-–∑–∞–ø—Ä–æ—Å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã PRICES –≤ —Å—Ç–æ–ª–±–µ—Ü price, –≥–¥–µ —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–∞ 12000(–°–£–ë–î - PostgreSQL)?")
        web_count+=1
        await StateBot.In_huaysk.set()
        await call.message.delete()
    elif call.data == "false":
        await call.message.answer("–í–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. \n\n–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å SQL-–∑–∞–ø—Ä–æ—Å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã PRICES –≤ —Å—Ç–æ–ª–±–µ—Ü price, –≥–¥–µ —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–∞ 12000(–°–£–ë–î - PostgreSQL)?")
        await StateBot.In_huaysk.set()
        await call.message.delete()

@dp.message_handler(state=StateBot.In_huaysk)
async def bot_game(message: types.Message, state: FSMContext):
    global web_count
    if message.text == "SELECT * FROM PRICES WHERE price = 12000":
        web_count+=1
        await message.answer("–î–æ –∫–æ–Ω—Ü–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å! \n\n–í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ä–µ—à–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ?", reply_markup=tasks_sen)
        await StateBot.In_task.set()
        await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id)
    else:
        await message.answer("–î–æ –∫–æ–Ω—Ü–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º —á—É—Ç—å-—á—É—Ç—å! \n\n–í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Ä–µ—à–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ?",reply_markup=tasks_sen)
        await StateBot.In_task.set()
        await bot.delete_message(chat_id=message.from_user.id, message_id=message.message_id)


@dp.callback_query_handler(text=["true_sen", "false_sen"], state=StateBot.In_task)
async def bot_g(call: types.CallbackQuery, state: FSMContext):
    global web_count
    if call.data == "true_sen":
        web_count+=1
        await call.message.delete()
        if web_count ==3:
            counts = ["–í–µ–±-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "–û—Ñ—Ñ–µ—Ä", call.from_user.id]
            cur.execute("UPDATE PLAYERS SET PROFESSION = %s,FINISH = %s WHERE TG_ID = %s", counts)
            con.commit()
            await call.message.answer("–í—ã –ø–æ–∫–∞–∑–∞–ª–∏ —Å–µ–±—è –Ω–µ–ø–ª–æ—Ö–æ. \n\n–ú—ã —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –≤—ã –≥–æ—Ç–æ–≤—ã –∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ. "+\
                                      "\n\n–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –ø–æ —Å—Å—ã–ª–∫–µ: \n\nhttps://talents.centrinvest.ru", reply_markup=get_mail)
            await StateBot.Set_mail_web.set()
        elif web_count <= 2:
            counts = ["–í–µ–±-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "–ù–µ –æ—Ñ—Ñ–µ—Ä", call.from_user.id]
            cur.execute("UPDATE PLAYERS SET PROFESSION = %s,FINISH = %s WHERE TG_ID = %s", counts)
            con.commit()
            msg = f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫—Ä—É–ø–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∞" + \
                  f"\n–û–±–æ–≥–∞—Ç–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ –ø–æ–º–æ–≥—É—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:" + \
                  f"\n\nhttps://stepik.org/course/38218?search=991907733" + \
                  f"\n\nhttps://stepik.org/course/100971?search=991907736" + \
                  f"\n\nhttps://stepik.org/course/87314?search=991907739"
            await call.message.answer(msg, reply_markup=get_mail)
            await StateBot.Set_mail_web.set()
    elif call.data == "false_sen":
        id = [call.from_user.id]
        counts = ["–í–µ–±-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", "–ù–µ –æ—Ñ—Ñ–µ—Ä", call.from_user.id]
        cur.execute("UPDATE PLAYERS SET PROFESSION = %s,FINISH = %s WHERE TG_ID = %s", counts)
        con.commit()
        msg = f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫—Ä—É–ø–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∞" + \
              f"\n–û–±–æ–≥–∞—Ç–∏—Ç—å—Å—è –∑–Ω–∞–Ω–∏—è–º–∏ –ø–æ–º–æ–≥—É—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:" + \
              f"\n\nhttps://stepik.org/course/38218?search=991907733" + \
              f"\n\nhttps://stepik.org/course/100971?search=991907736" + \
              f"\n\nhttps://stepik.org/course/87314?search=991907739"
        await call.message.answer(msg, reply_markup=get_mail)
        await StateBot.Set_mail_web.set()

@dp.callback_query_handler(text=['mail', 'stope_kuda_gonish'], state=StateBot.Set_mail_web)
async def bot_gm(call: types.CallbackQuery, state: FSMContext):
    if call.data == 'mail':
        await call.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞")
        await StateBot.Get_mail_web.set()
    if call.data == 'stope_kuda_gonish':
        await state.finish()
        await call.message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!")

@dp.message_handler(state=StateBot.Get_mail_web)
async def bot_sm(message: types.Message, state: FSMContext):
    id = [message.from_user.id]
    cur.execute("SELECT NAME, PROG_COUNT, TESTER_COUNT, ANALYSE_COUNT, ADMIN_COUNT FROM PLAYERS WHERE TG_ID = %s", id)
    raws = cur.fetchall()
    p = raws[0][1]
    t = raws[0][2]
    a = raws[0][3]
    an = raws[0][4]
    cur.execute("SELECT PROFESSION, FINISH FROM PLAYERS WHERE TG_ID = %s", id)
    raws_t = cur.fetchall()
    prof = raws_t[0][0]
    fin = raws_t[0][1]
    msg_mail = "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∏–≥—Ä—ã:" + \
               f"\n–ò–º—è::{raws[0][0]}" + \
               f"\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞:{p}" + \
               f"\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∞:{t}" + \
               f"\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞:{a}" + \
               f"\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:{an}" + \
               f"\n–ò—Ç–æ–≥–æ–≤–∞—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {prof}" + \
               f"\n{fin}"
    try:
        mail(msg_mail, message.text)
        await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        await state.finish()
    except Exception:
        await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—á—Ç–∞!")